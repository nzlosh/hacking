[tox]
minversion = 2.0
skipsdist = True
envlist = py{36,27},pep8,pypy

[testenv]
usedevelop = True
install_command = pip install {opts} {packages}
deps =
       -c{env:UPPER_CONSTRAINTS_FILE:https://git.openstack.org/cgit/openstack/requirements/plain/upper-constraints.txt}
       -r{toxinidir}/requirements.txt
       -r{toxinidir}/test-requirements.txt
commands =
  stestr run --slowest {posargs}

[tox:jenkins]
sitepackages = True

[testenv:pep8]
basepython = python3
commands = flake8 {posargs}

[testenv:integration]
basepython = python3
whitelist_externals = bash
commands =
  bash integration-test/test.sh {posargs}

[testenv:cover]
basepython = python3
setenv =
    PYTHON=coverage run --source hacking --parallel-mode
commands =
    stestr run {posargs}
    coverage combine
    coverage html -d cover
    coverage xml -o cover/coverage.xml

[testenv:venv]
basepython = python3
commands = {posargs}

[testenv:docs]
basepython = python3
commands = python setup.py build_sphinx

[testenv:releasenotes]
basepython = python3
commands = sphinx-build -a -E -W -d releasenotes/build/doctrees -b html releasenotes/source releasenotes/build/html

[flake8]
exclude = .venv,.tox,dist,doc,*.egg,build
show-source = true
enable-extensions = H106

[hacking]
local-check = hacking.tests.test_local.check

[testenv:lower-constraints]
basepython = python3
deps =
  -c{toxinidir}/lower-constraints.txt
  -r{toxinidir}/test-requirements.txt
  -r{toxinidir}/requirements.txt
